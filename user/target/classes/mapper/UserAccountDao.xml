<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "./mybatis-3-mapper.dtd">
<mapper namespace="cn.kcs.user.dao.UserAccountDao">

    <resultMap type="cn.kcs.user.entity.UserAccount" id="UserAccountMap">
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userPhone" column="user_phone" jdbcType="VARCHAR"/>
        <result property="userEmail" column="user_email" jdbcType="VARCHAR"/>
        <result property="userAvatar" column="user_avatar" jdbcType="VARCHAR"/>
        <result property="userRole" column="user_role" jdbcType="VARCHAR"/>
        <result property="userRoleName" column="role_description" jdbcType="VARCHAR"/>
        <result property="userDepartment" column="user_department" jdbcType="VARCHAR"/>
        <result property="userDepartmentName" column="department_name" jdbcType="VARCHAR"/>
        <result property="userPassword" column="user_password" jdbcType="VARCHAR"/>
        <result property="userStatus" column="user_status" jdbcType="VARCHAR"/>
        <result property="userLastLoginTime" column="user_last_login_time" jdbcType="TIMESTAMP"/>
        <result property="userCreateTime" column="user_create_time" jdbcType="TIMESTAMP"/>
        <result property="userUpdateTime" column="user_update_time" jdbcType="TIMESTAMP"/>
        <result property="userLoginNumber" column="user_login_number" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserAccountMap">
        select
        user_id, user_name, user_phone, user_email, user_avatar, user_role, user_department, user_password, user_status,
        user_last_login_time, user_create_time, user_update_time, user_login_number, role_description, department_name
        from (myproject.user_account left JOIN myproject.role on user_role = role_id) left JOIN myproject.user_department on user_department = department_id
        where user_id = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserAccountMap">
        select
        user_id, user_name, user_phone, user_email, user_avatar, user_role, user_department, user_password, user_status,
        user_last_login_time, user_create_time, user_update_time, user_login_number, role_description, department_name
        from (myproject.user_account left JOIN myproject.role on user_role = role_id) left JOIN myproject.user_department on user_department = department_id
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserAccountMap">
        select
        user_id, user_name, user_phone, user_email, user_avatar, user_role, user_department, user_password, user_status,
        user_last_login_time, user_create_time, user_update_time, user_login_number, role_description, department_name
        from (myproject.user_account left JOIN myproject.role on user_role = role_id) left JOIN
        myproject.user_department on user_department = department_id
        <where>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and user_phone = #{userPhone}
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email = #{userEmail}
            </if>
            <if test="userAvatar != null and userAvatar != ''">
                and user_avatar = #{userAvatar}
            </if>
            <if test="userRole != null and userRole != ''">
                and user_role = #{userRole}
            </if>
            <if test="userDepartment != null and userDepartment != ''">
                and user_department = #{userDepartment}
            </if>
            <if test="userPassword != null and userPassword != ''">
                and user_password = #{userPassword}
            </if>
            <if test="userStatus != null and userStatus != ''">
                and user_status = #{userStatus}
            </if>
            <if test="userLastLoginTime != null">
                and user_last_login_time = #{userLastLoginTime}
            </if>
            <if test="userCreateTime != null">
                and user_create_time = #{userCreateTime}
            </if>
            <if test="userUpdateTime != null">
                and user_update_time = #{userUpdateTime}
            </if>
            <if test="userLoginNumber != null">
                and user_login_number = #{userLoginNumber}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into myproject.user_account(user_id, user_name, user_phone, user_email, user_avatar, user_role,
        user_department, user_password, user_status, user_last_login_time, user_create_time, user_update_time,
        user_login_number)
        values (#{userId}, #{userName}, #{userPhone}, #{userEmail}, #{userAvatar}, #{userRole}, #{userDepartment},
        #{userPassword}, #{userStatus}, #{userLastLoginTime}, #{userCreateTime}, #{userUpdateTime}, #{userLoginNumber})
    </insert>

    <!--通过主键修改数据-->
    <update id="update" flushCache="true">
        update myproject.user_account
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userPhone != null and userPhone != ''">
                user_phone = #{userPhone},
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email = #{userEmail},
            </if>
            <if test="userAvatar != null and userAvatar != ''">
                user_avatar = #{userAvatar},
            </if>
            <if test="userRole != null and userRole != ''">
                user_role = #{userRole},
            </if>
            <if test="userDepartment != null and userDepartment != ''">
                user_department = #{userDepartment},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password = #{userPassword},
            </if>
            <if test="userStatus != null and userStatus != ''">
                user_status = #{userStatus},
            </if>
            <if test="userLastLoginTime != null">
                user_last_login_time = #{userLastLoginTime},
            </if>
            <if test="userCreateTime != null">
                user_create_time = #{userCreateTime},
            </if>
            <if test="userUpdateTime != null">
                user_update_time = #{userUpdateTime},
            </if>
            <if test="userLoginNumber != null and userLoginNumber != ''">
                user_login_number = #{userLoginNumber},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from myproject.user_account where user_id = #{userId}
    </delete>

</mapper>